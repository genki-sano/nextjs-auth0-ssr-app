import { getSession, withPageAuthRequired } from '@auth0/nextjs-auth0'
import { NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import styles from '@/styles/Home.module.css'
import { getSupabase } from '@/utils/supabase'

interface User {
  name: string
}

interface ToDo {
  id: number
  usder_id: string
  is_complete: boolean
  content: string
}

interface Props {
  user: User
  todos: ToDo[]
}

const Index: NextPage<Props> = ({ user, todos }) => {
  return (
    <>
      <Head>
        <title>Next Auth0 SSR App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className={styles.container}>
        <p>
          Welcome {user.name}!{' '}
          <Link href='/api/auth/logout'>
            <a>Logout</a>
          </Link>
        </p>
        {todos?.length > 0 ? (
          todos.map((todo) => <p key={todo.id}>{todo.content}</p>)
        ) : (
          <p>You have completed all todos!</p>
        )}
      </div>
    </>
  )
}

export const getServerSideProps = withPageAuthRequired({
  async getServerSideProps({ req, res }) {
    const session = await getSession(req, res)
    if (!session) {
      throw new Error('auth0に接続できません')
    }

    const supabase = getSupabase(session.user.accessToken)
    if (!supabase) {
      throw new Error('supabaseに接続できません')
    }

    const { error, data } = await supabase.from<ToDo>('todos').select('*')
    if (error) {
      throw new Error(error.message)
    }

    return {
      props: { todos: data },
    }
  },
})

export default Index
